name: Deploy static content to GitPages
on:
workflow_dispatch:
workflow_run:
    workflows: [Generate GitBlog README]  # Depends on the completion of the workflow: Generate GitBlog README
    types:
    - completed
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
contents: read
pages: write
id-token: write
concurrency:
group: ${{ github.workflow }}
cancel-in-progress: true
jobs:
deploy:
    environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env:
        GH_TOKEN: ${{ github.token }}
        ISITE_VERSION: v0.1.3
        ZOLA_VERSION: v0.19.2
        USER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
         #if you use Gitpage and your repo'name is not {usernmae}.github.io,please use this
        BASE_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
        # else if your repo's name is {usernmae}.github.io,please use this,please use this
        # BASE_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
    steps:
    - name: Checkout
        uses: actions/checkout@v4
    - name: Generate markdown
        run: |
        gh release download $ISITE_VERSION --repo kemingy/isite -p '*Linux_x86_64*' --output isite.tar.gz
        tar zxf isite.tar.gz && mv isite /usr/local/bin
        isite generate --user $USER --repo $REPO
        gh release download $ZOLA_VERSION --repo getzola/zola -p '*linux*' --output zola.tar.gz
        tar zxf zola.tar.gz && mv zola /usr/local/bin
        cp config.toml output/config.toml
        cd output && zola build --base-url $BASE_URL
    - name: Setup Pages
        uses: actions/configure-pages@v4
    - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
        path: 'output/public'
    - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
